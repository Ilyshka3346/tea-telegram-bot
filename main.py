import logging
import os
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv('BOT_TOKEN', '8444368217:AAHrcAVnvgUKyQ9aEoRtgJNZclqhcwMNZXs')

# –ö–∞—Ç–∞–ª–æ–≥ —á–∞—è (–¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
CATALOG = {
    '1': {
        'name': 'üçµ –î–∞—Ñ–æ –õ—É–Ω—Ü–∑–∏–Ω (–∫–æ–ª–æ–¥–µ—Ü –¥—Ä–∞–∫–æ–Ω–∞)',
        'description': '–í–∫—É—Å: –Ω–µ–∂–Ω—ã–π, –≥—É—Å—Ç–æ–π, –æ—Å–≤–µ–∂–∞—é—â–∏–π, —Å–ª–∞–¥–∫–∏–π. –û—Ç—Ç–µ–Ω–∫–∏ –ª–∏–ø–æ–≤–æ–≥–æ –º–µ–¥–∞, –æ—Ä–µ—Ö–æ–≤, –¥—ã–Ω–∏ –∏ —Å–≤–µ–∂–∏—Ö —Ñ—Ä—É–∫—Ç–æ–≤.',
        'price': 640,
        'weight': '50–≥—Ä',
        'price_per_gram': 13
    },
    '2': {
        'name': 'üö© –î–∞ –•—É–Ω –ü–∞–æ (–±–æ–ª—å—à–æ–π –∫—Ä–∞—Å–Ω—ã–π —Ö–∞–ª–∞—Ç)',
        'description': '–í–∫—É—Å: –Ω–µ–∂–Ω—ã–π, –≥—É—Å—Ç–æ–π –∏ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π, —Ç–∞–±–∞—á–Ω—ã–º–∏, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–º–∏, –º–µ–¥–æ–≤—ã–º–∏ –Ω–æ—Ç–∞–º–∏ –∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º —Å–µ–º–µ—á–µ–∫.',
        'price': 400,
        'weight': '50–≥—Ä',
        'price_per_gram': 8
    },
    '3': {
        'name': 'üçµ –¢–µ –≥—É–∞–Ω—å –∏–Ω—å (–∂–µ–ª–µ–∑–Ω–∞—è –±–æ–≥–∏–Ω—è)',
        'description': '–í–æ –≤–∫—É—Å–µ: —Å–≤–µ–∂–µ—Å–∫–æ—à–µ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞, —Ü–≤–µ—Ç—ã, —Ü–∏—Ç—Ä—É—Å—ã, –º—ë–¥ —Å –∂–µ–ª–µ–∑–Ω—ã–º –ø–æ—Å–ª–µ–≤–∫—É—Å–∏–µ–º –∏ –ª–µ–≥–∫–∏–º–∏ –º–µ–Ω—Ç–æ–ª–æ–≤—ã–º–∏ –Ω–æ—Ç–∫–∞–º–∏',
        'price': 430,
        'weight': '50–≥—Ä',
        'price_per_gram': 8.6
    },
    '4': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2021–≥. ¬´–Æ–∞–Ω—å—Ñ—ç–π¬ª',
        'description': '–®—É –ü—É—ç—Ä 2021–≥. –∑–∞–≤–æ–¥–∞ ¬´–ß–∞—à—É–≤–∞–Ω¬ª 357–≥—Ä.',
        'price': 1600,
        'weight': '357–≥—Ä',
        'price_per_gram': 4.5
    },
    '5': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2019–≥. ¬´3 –∑–≤–µ–∑–¥—ã¬ª',
        'description': '–®—É –ü—É—ç—Ä 2019–≥. –∑–∞–≤–æ–¥–∞ ¬´–ß–∞—à—É–≤–∞–Ω¬ª 357–≥—Ä.',
        'price': 1600,
        'weight': '357–≥—Ä',
        'price_per_gram': 4.5
    },
    '6': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2021–≥. ¬´–ë—ã–∫ –∏–∑ –ù–∞–∫–∞¬ª',
        'description': '–®—É –ü—É—ç—Ä 2021–≥. –∑–∞–≤–æ–¥–∞ ¬´–ß–∞—à—É–≤–∞–Ω¬ª 357–≥—Ä.',
        'price': 2360,
        'weight': '357–≥—Ä',
        'price_per_gram': 7
    },
    '7': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2017–≥. ¬´–ì—É–Ω—Ç–∏–Ω¬ª',
        'description': '–®—É –ü—É—ç—Ä 2017–≥. –∑–∞–≤–æ–¥–∞ ¬´–Æ–Ω—å—Ñ—É—Å—è–Ω¬ª 357–≥—Ä. –í–∫—É—Å: –¥—Ä–µ–≤–µ—Å–∏–Ω–∞, –∑–µ–º–ª—è —Å –Ω–æ—Ç–∫–∞–º–∏ –±–∞–Ω–∏, –≥—Ä–µ—Ü–∫–æ–≥–æ –æ—Ä–µ—Ö–∞, —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤ –∏ –ª—ë–≥–∫–æ–π —Å–ª–∏–≤–æ—á–Ω–æ—Å—Ç—å—é',
        'price': 3140,
        'weight': '357–≥—Ä',
        'price_per_gram': 8.8
    },
    '8': {
        'name': 'üçµ –®–µ–Ω –ü—É—ç—Ä 2020–≥. ¬´–ì–æ—Ä–∞ –ë–∞–¥–∞¬ª',
        'description': '–®–µ–Ω –ü—É—ç—Ä 2020–≥. –∑–∞–≤–æ–¥–∞ ¬´–Æ–Ω—å—Ñ—É—Å—è–Ω¬ª 357–≥—Ä.',
        'price': 2000,
        'weight': '357–≥—Ä',
        'price_per_gram': 5.7
    },
    '9': {
        'name': 'üçµ –®–µ–Ω –ü—É—ç—Ä 2018–≥. ¬´–ó–æ–ª–æ—Ç–∞—è –Ω–∏—Ç—å¬ª',
        'description': '–®–µ–Ω –ü—É—ç—Ä 2018–≥. –∑–∞–≤–æ–¥–∞ ¬´–°—è–≥—É–∞–Ω—å¬ª –≥–Ω–µ–∑–¥–æ 100–≥—Ä.',
        'price': 1000,
        'weight': '100–≥—Ä',
        'price_per_gram': 10
    },
    '10': {
        'name': 'üçµ –®–µ–Ω –ü—É—ç—Ä 2013–≥. ¬´7543¬ª',
        'description': '–®–µ–Ω –ü—É—ç—Ä 2013–≥. –∑–∞–≤–æ–¥–∞ ¬´–°—è–≥—É–∞–Ω—å¬ª 357–≥—Ä.',
        'price': 3750,
        'weight': '357–≥—Ä',
        'price_per_gram': 10.6
    },
    '11': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2016–≥. ¬´–ù–∞–Ω—å–Ω–æ¬ª',
        'description': '–®—É –ü—É—ç—Ä 2016–≥. –∑–∞–≤–æ–¥–∞ ¬´–ß–∂–æ—É—à–∏¬ª 357–≥—Ä.',
        'price': 2040,
        'weight': '357–≥—Ä',
        'price_per_gram': 5.7
    },
    '12': {
        'name': 'üçµ –®—É –ü—É—ç—Ä 2005–≥. ¬´–î–≤–æ—Ä —á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–æ–ª—è¬ª',
        'description': '–®—É –ü—É—ç—Ä 2005–≥. –∑–∞–≤–æ–¥–∞ ¬´–ß–∂–æ—É—à–∏¬ª 357–≥—Ä.',
        'price': 2220,
        'weight': '357–≥—Ä',
        'price_per_gram': 6.2
    },
    '13': {
        'name': 'üçµ –®—É–π—Å—è–Ω—å (–≤–ª–∞–¥—ã–∫–∞ –≤–æ–¥)',
        'description': '–¢–µ–º–Ω—ã–π —É–ª—É–Ω —Å–∏–ª—å–Ω–æ–π –ø—Ä–æ–∂–∞—Ä–∫–∏. –í–∫—É—Å: –ª–µ–≥–∫–∏–π —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º–∏, —Ç–∞–±–∞—á–Ω—ã–º–∏, —Ñ—Ä—É–∫—Ç–æ–≤—ã–º–∏ –∏ —Å–µ–º–µ—á–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏.',
        'price': 520,
        'weight': '50–≥—Ä',
        'price_per_gram': 10.4
    }
}

# –ö–æ—Ä–∑–∏–Ω–∞ –≤ –ø–∞–º—è—Ç–∏ (—Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á - user_id, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤)
user_carts = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu_keyboard = [
    ['üçµ –ö–∞—Ç–∞–ª–æ–≥', 'üõí –ö–æ—Ä–∑–∏–Ω–∞'],
    ['üì¢ –ù–∞—à –∫–∞–Ω–∞–ª', 'üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏']
]
reply_markup = ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = (
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞–π–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω MOYCHAIüçµ.\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:"
    )
    await update.message.reply_html(welcome_text, reply_markup=reply_markup)

# –ü–æ–∫–∞–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
async def show_catalog(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—è
    keyboard = []
    row = []
    
    for i, (product_id, product) in enumerate(CATALOG.items(), 1):
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —á–∞—è
        button = InlineKeyboardButton(product['name'][:20] + "...", callback_data=f"view_{product_id}")
        row.append(button)
        
        # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
        if i % 2 == 0:
            keyboard.append(row)
            row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä—è–¥, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
    if row:
        keyboard.append(row)
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    keyboard.append([InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_main")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("üçµ –í—ã–±–µ—Ä–∏—Ç–µ —á–∞–π –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:", reply_markup=reply_markup)

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞–µ
async def show_tea_info(update: Update, context: ContextTypes.DEFAULT_TYPE, product_id: str):
    product = CATALOG[product_id]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    info_text = (
        f"{product['name']}\n\n"
        f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {product['description']}\n\n"
        f"üí∞ –¶–µ–Ω–∞: {product['price']}‚ÇΩ/{product['weight']}\n"
        f"üìä –¶–µ–Ω–∞ –∑–∞ 1–≥—Ä: {product['price_per_gram']}‚ÇΩ\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{product_id}")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥", callback_data="back_catalog")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(info_text, reply_markup=reply_markup)

# –ü–æ–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã
async def show_cart(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é
    cart = user_carts.get(user_id, [])
    
    if not cart:
        await update.message.reply_text("üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã
    cart_text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n"
    total = 0
    
    for item in cart:
        product = CATALOG[item['product_id']]
        item_total = product['price']
        total += item_total
        cart_text += f"‚Ä¢ {product['name']}\n"
        cart_text += f"  {product['weight']} - {product['price']}‚ÇΩ\n\n"
    
    cart_text += f"üíµ –û–±—â–∞—è —Å—É–º–º–∞: {total}‚ÇΩ"
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
    keyboard = [
        [InlineKeyboardButton("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout")],
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_main")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(cart_text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def handle_button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    data = query.data
    user_id = query.from_user.id
    
    if data == "back_main":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await query.edit_message_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=reply_markup)
    
    elif data == "back_catalog":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –∫–∞—Ç–∞–ª–æ–≥
        await show_catalog(update, context)
    
    elif data.startswith("view_"):
        # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞–µ
        product_id = data.split("_")[1]
        await query.edit_message_text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞–µ:")
        await show_tea_info(update, context, product_id)
    
    elif data.startswith("add_"):
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
        product_id = data.split("_")[1]
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        if user_id not in user_carts:
            user_carts[user_id] = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        user_carts[user_id].append({
            'product_id': product_id,
            'added_at': 'now'  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        })
        
        await query.answer("‚úÖ –ß–∞–π –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")
    
    elif data == "clear_cart":
        # –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        if user_id in user_carts:
            user_carts[user_id] = []
        await query.edit_message_text("üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞")
    
    elif data == "checkout":
        # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        await query.edit_message_text("–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å @moychai181")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == 'üçµ –ö–∞—Ç–∞–ª–æ–≥':
        await show_catalog(update, context)
    elif text == 'üõí –ö–æ—Ä–∑–∏–Ω–∞':
        await show_cart(update, context)
    elif text == 'üì¢ –ù–∞—à –∫–∞–Ω–∞–ª':
        await update.message.reply_text("–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/moichai181")
    elif text == 'üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏':
        await update.message.reply_text("–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @moychai181")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:", reply_markup=reply_markup)

def main():
    application = Application.builder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(handle_button_click))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    application.run_polling()

if __name__ == '__main__':
    main()